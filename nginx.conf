
user root;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    sendfile on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout 800;
    proxy_connect_timeout 800;
    proxy_read_timeout 800;
    proxy_send_timeout 800;
    client_max_body_size 5120m;
    #gzip  on;

    server {
        listen 8081;
        server_name localhost;

        location / {
            root html;
            index index.html index.htm;
        }

        location /api {
            proxy_pass http://localhost:7890/;
        }
    }

    server {
        listen 8086;
        server_name localhost;

        location / {
            root ota_html;
            index index.html index.htm;
        }
        ## 注意后面有'/'
        location /ota/ {
            proxy_pass http://127.0.0.1:7896/;
            #  proxy_pass  http://127.0.0.1:7892/;
        }
    }

    server {
        listen 8080;
        server_name localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location / {
            root html;
            index index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }

        location /pop/video {
            alias /var/video;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xls {
            root html;
        }

        location /live {
            flv_live on;#打开HTTP播放FLV直播流功能
            chunked_transfer_encoding on;#支持'Transfer-Encoding: chunked'方式回复
            add_header 'Access-Control-Allow-Origin' '*';#添加额外的HTTP头
            add_header 'Access-Control-Allow-Credentials' 'true';#添加额外的HTTP头
        }
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /tmp;
            add_header 'Cache-Control' 'no-cache';
        }

        location /dash {
            root /tmp;
            add_header 'Cache-Control' 'no-cache';
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;

rtmp {
    out_queue 8192; #数据传输块的大小--默认
    out_cork 8;
    max_streams 128;
    timeout 15s;
    drop_idle_publisher 15s;

    server {
        listen 1935; #服务端口--默认
        server_name rtmp;
        application mylive {
            live on;
            gop_cache on; #打开GOP缓存，减少首屏等待时间
        }

        application hls {
            live on;
            hls on;
            hls_fragment 25s;
            hls_path /tmp/hls;
            gop_cache on;
        }

        application dash {
            live on;
            dash on;
            dash_path /tmp/dash;
        }

    }

}